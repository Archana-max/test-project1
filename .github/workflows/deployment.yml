name: Deployment Project
on: push
jobs:
  linting:
    runs-on: macos-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - name: Caching node modulus
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Run Linting
        run: npm run lint
  testing:
    needs: linting
    runs-on: macos-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - name: Caching node modulus
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Run test
        run: npm run test
  build:
    needs: testing
    runs-on: macos-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - name: Caching node modulus
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
      - name: Output dist-files
        run: ls
  pass-to-workflow:
    needs: build
    uses: ./.github/workflows/reuse.yml
  print-deploy-result:
    needs: pass-to-workflow
    runs-on: macos-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.pass-to-workflow.outputs.result}}"
  deploy:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output filename
        run: echo ${{needs.build.outputs.script-file}}
      - name: Deploy
        run: echo 'Deploying the project....'
